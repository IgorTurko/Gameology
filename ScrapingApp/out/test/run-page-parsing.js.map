{"version":3,"sources":["webpack:///webpack/bootstrap c790ba1b16016fd90544?9d13","webpack:///./server/extensions.ts?6836","webpack:///./server/data-access/db.ts?fc04","webpack:///external \"mongodb\"?b417","webpack:///./server/config.ts?d70e","webpack:///external \"fs\"?2e09","webpack:///./server/services/web-shop/mongo-web-shop-storage.ts?d4d9","webpack:///./server/services/web-shop/web-shop-service.ts?8393","webpack:///./server/services/web-shop/web-shop-validator.ts?4110","webpack:///./server/validator/index.ts?fb13","webpack:///./server/validator/error-accumulator.ts?3927","webpack:///./server/validator/validation-context.ts?1571","webpack:///./server/validator/rules/index.ts?2605","webpack:///./server/validator/rules/primitive-type-rules.ts?c241","webpack:///./server/validator/rules/rules-base.ts?0cce","webpack:///./server/validator/rules/object-rules.ts?3109","webpack:///./server/validator/rules/hash-rules.ts?9757","webpack:///./server/validator/rules/array-rules.ts?51ee","webpack:///./server/services/products/mongo-product-storage.ts?2fde","webpack:///./server/services/products/product-service.ts?576f","webpack:///external \"moment\"?a88d","webpack:///external \"node-uuid\"?fdd4","webpack:///./server/services/event-bus.ts?93ac","webpack:///external \"events\"?c68f","webpack:///./server/services/products/product-validator.ts?6887","webpack:///./server-test/test-parsing/run-page-parsing.ts","webpack:///./server/services/scraping/scrape-service.ts","webpack:///./server/scrapers/jsdom-scraper.ts","webpack:///external \"jsdom\"","webpack:///./server/scrapers/value-parser.ts","webpack:///external \"path\""],"names":[],"mappings":"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","file":"run-page-parsing.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap c790ba1b16016fd90544\n **/","/// <reference path=\"typings/index.d.ts\" />\r\n\r\nif (!Array.prototype.toHash) {\r\n    Array.prototype.toHash = function toHash<T, K>(keySelector: (elem: T) => string, valueSelector?: (elem: T) => K): { [key: string]: K; } {\r\n        valueSelector = valueSelector || ((e: T) => ((e as any) as K));\r\n\r\n        return this.reduce((hash, elem) => {\r\n            const key = keySelector(elem);\r\n            const value = valueSelector(elem);\r\n\r\n            hash[key] = value;\r\n\r\n            return hash;\r\n        },\r\n        {}) as { [key: string]: K; };\r\n    };\r\n}\r\n\r\nif (!Object.entries) {\r\n    Object.entries = (obj: any) => Object.keys(obj)\r\n        .map(key => ([key, obj[key]]));\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./server/extensions.ts\n **/","/// <reference path=\"../typings/index.d.ts\" />\r\nimport * as mongo from \"mongodb\";\r\nimport config from \"../config\";\r\n\r\nlet db: Promise<mongo.Db> = new Promise((resolve, reject) => {\r\n    mongo.MongoClient.connect(config.mongoUrl,\r\n    (err, db) => {\r\n        if (err) {\r\n            reject(err);\r\n        } else {\r\n            console.info(`Connected to Mongo server at ${config.mongoUrl}`);\r\n            resolve(db);\r\n        }\r\n    });\r\n});\r\n\r\nexport default class Database {\r\n    static Collections = {\r\n        sessions: \"sessions\",\r\n        webshops: \"webshops\",\r\n        products: \"products\",\r\n        users: \"users\"\r\n    };\r\n\r\n    collection(collection: string): Promise<mongo.Collection> {\r\n        if (!collection)\r\n            throw new Error(\"collection is undefined\");\r\n        if (!Database.Collections[collection])\r\n            throw new Error(`Collection ${collection} is unknown`);\r\n\r\n        return this.connect()\r\n            .then(db => db.collection(collection));\r\n    }\r\n\r\n    private connect(): Promise<mongo.Db> {\r\n        return db;\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./server/data-access/db.ts\n **/","module.exports = require(\"mongodb\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"mongodb\"\n ** module id = 4\n ** module chunks = 0 1\n **/","/// <reference path=\"typings/index.d.ts\"/>\r\nimport * as fs from \"fs\";\r\n\r\n\r\nlet configContent = fs.readFileSync(\"./config.json\", \"utf8\");\r\nlet configuration = <Configuration>JSON.parse(configContent);\r\n\r\nexport default configuration;\n\n\n/** WEBPACK FOOTER **\n ** ./server/config.ts\n **/","module.exports = require(\"fs\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"fs\"\n ** module id = 6\n ** module chunks = 0 1\n **/","/// <reference path=\"../../typings/index.d.ts\" />\r\n\r\nimport Database from \"../../data-access/db\";\r\n\r\nexport default class MongoWebShopStorage implements WebShops.IWebShopStorage {\r\n    constructor(private db: Database) {\r\n        if (!db)\r\n            throw new Error(\"db is undefined\");\r\n    }\r\n\r\n    all(): Promise<Api.WebShop[]> {\r\n        return this.db\r\n            .collection(Database.Collections.webshops)\r\n            .then(c => c.find({}, { _id: 0 }))\r\n            .then(c => c.toArray());\r\n    }\r\n\r\n    one(id: string): Promise<Api.WebShop> {\r\n        if (!id)\r\n            throw new Error(\"id is undefined\");\r\n\r\n        return this.db\r\n            .collection(Database.Collections.webshops)\r\n            .then(c => c.find({ id: id }, { _id: 0 }))\r\n            .then(c => c.limit(1).next());\r\n    }\r\n\r\n    save(webShop: Api.WebShop): Promise<Api.WebShop> {\r\n        if (!webShop)\r\n            throw new Error(\"webShop is undefined\");\r\n\r\n        return this.db\r\n            .collection(Database.Collections.webshops)\r\n            .then(c => c.updateOne(\r\n                {\r\n                    id: webShop.id\r\n                },\r\n                {\r\n                    $set: {\r\n                        deliveryPrice: webShop.deliveryPrice\r\n                    }\r\n                }\r\n            ))\r\n            .then(() => webShop);\r\n    }\r\n\r\n    put(webShop: Api.WebShop): Promise<Api.WebShop> {\r\n        if (!webShop)\r\n            throw new Error(\"webShop is undefined\");\r\n\r\n        return this.db\r\n            .collection(Database.Collections.webshops)\r\n            .then(c => c.updateOne(\r\n                {\r\n                    id: webShop.id\r\n                },\r\n                webShop,\r\n                {\r\n                    upsert: true\r\n                }\r\n            ))\r\n            .then(() => webShop);\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./server/services/web-shop/mongo-web-shop-storage.ts\n **/","/// <reference path=\"../../typings/index.d.ts\" />\r\n\r\nimport WebShopValidator from \"./web-shop-validator\";\r\n\r\nexport default class WebShopService {\r\n\r\n    private validator = new WebShopValidator();\r\n\r\n    constructor(private storage: WebShops.IWebShopStorage) {\r\n        if (!storage)\r\n            throw new Error(\"storage is undefined\");\r\n    }\r\n\r\n    all(): Promise<Api.WebShop[]> {\r\n        return this.storage.all();\r\n    }\r\n\r\n    one(webShopId: string): Promise<Api.WebShop> {\r\n        if (!webShopId)\r\n            throw new Error(\"webShopId is undefined\");\r\n        return this.storage.one(webShopId);\r\n    }\r\n\r\n    save(webShop: Api.WebShop): Promise<Api.WebShop> {\r\n        if (!webShop)\r\n            throw new Error(\"webShop is undefined\");\r\n\r\n        return this.validator\r\n            .validate(webShop)\r\n            .then(webShop => this.storage\r\n                .save(webShop)\r\n                .then(() => this.one(webShop.id)));\r\n    }\r\n\r\n    put(webShop: Api.WebShop): Promise<Api.WebShop> {\r\n        if (!webShop)\r\n            throw new Error(\"webShop is undefined\");\r\n\r\n        return <Promise<Api.WebShop>><any>this.storage\r\n            .put(webShop)\r\n            .then(() => this.one(webShop.id))\r\n            .catch(err => {\r\n                throw {\r\n                    \"\": `${err}`\r\n                };\r\n            });\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./server/services/web-shop/web-shop-service.ts\n **/","/// <reference path=\"../../typings/index.d.ts\" />\r\n\r\nimport { validateWithPromise as validate, ValidationRule, rules } from \"../../validator\";\r\n\r\nexport default class WebShopValidator {\r\n    /** Only updateable fields is validated */\r\n    public validator: ValidationRule<Api.WebShop> = rules.obj<Api.WebShop>({\r\n        deliveryPrice: rules.num(false, { errorMessage: \"Invalid price\" })\r\n            .parseNumber({ errorMessage: \"Price is not recognized as number\" })\r\n            .must(price => !price || price > 0, { errorMessage: \"Delivery price must be greater than zero\" })\r\n    }).expandable();\r\n\r\n    validate(webShop: Api.WebShop): Promise<Api.WebShop> {\r\n        if (!webShop)\r\n            throw new Error(\"webShop is undefined\");\r\n\r\n        return validate(webShop, this.validator);\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./server/services/web-shop/web-shop-validator.ts\n **/","import { ValidationRule, ValidationResult } from \"./definitions\";\r\nimport ErrorAccumulator from \"./error-accumulator\";\r\nimport ValidationContext from \"./validation-context\";\r\n\r\nimport * as rules from \"./rules\";\r\n\r\nexport * from \"./definitions\";\r\nexport { rules };\r\n\r\nexport function validateWithCallback<T>(value: any, done: (result: ValidationResult<T>) => void, ...validators: ValidationRule<T>[]): void {\r\n    if (!done) {\r\n        throw new Error(\"Done callback is required.\");\r\n    }\r\n    if (!validators || !validators.length) {\r\n        throw new Error(\"At least one validator is required\");\r\n    }\r\n\r\n    const errorAccumulator = new ErrorAccumulator();\r\n    const validationContext = new ValidationContext(\"\", errorAccumulator);\r\n\r\n    const rule = rules.combineRules(...validators);\r\n\r\n    const parsedValue = rule.runParse(value, value, value);\r\n\r\n    rule.runValidate(\r\n        validationContext,\r\n        () => {\r\n            if (errorAccumulator.valid()) {\r\n                const validationResult: ValidationResult<T> = {\r\n                    valid: true,\r\n                    convertedValue: parsedValue\r\n                };\r\n                done(validationResult);\r\n            }\r\n            else {\r\n                const validationResult: ValidationResult<T> = {\r\n                    valid: false,\r\n                    convertedValue: null,\r\n                    errors: errorAccumulator.errors()\r\n                };\r\n                done(validationResult);\r\n            }\r\n        },\r\n        parsedValue,\r\n        parsedValue,\r\n        parsedValue);\r\n}\r\n\r\nexport function validateWithPromise<T>(value: any, ...validators: ValidationRule<T>[]): Promise<T> {\r\n    if (!validators || !validators.length) {\r\n        throw new Error(\"At least one validator is required\");\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        validateWithCallback(\r\n            value,\r\n            result => {\r\n                if (result.valid) {\r\n                    resolve(result.convertedValue);\r\n                }\r\n                else {\r\n                    reject(result.errors);\r\n                }\r\n            },\r\n            ...validators);\r\n    });\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./server/validator/index.ts\n **/","import { ValidationErrorHash } from \"./definitions\";\r\n\r\nexport default class ErrorAccumulator {\r\n    private errorHash: ValidationErrorHash = {};\r\n    private isValid = true;\r\n\r\n    report(path: string, errorMessage: string): void {\r\n        if (!errorMessage) {\r\n            return;\r\n        }\r\n\r\n        const messages = this.errorHash[path] = (this.errorHash[path] || []);\r\n        messages.push(errorMessage);\r\n        \r\n        this.isValid = false;\r\n    }\r\n\r\n    errors(): ValidationErrorHash {\r\n        return this.errorHash;\r\n    }\r\n\r\n    valid() {\r\n        return this.isValid;\r\n    }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./server/validator/error-accumulator.ts\n **/","import { IValidationContext } from \"./definitions\";\r\n\r\nimport ErrorAccumulator from \"./error-accumulator\";\r\n\r\nexport default class ValidationContext implements IValidationContext {\r\n    private errorBuffer: ErrorAccumulator = null;\r\n\r\n    constructor(\r\n        public path: string,\r\n        private errorAccumulator: ErrorAccumulator,\r\n        private errorCallback: (errorMessage: string) => boolean = null) {\r\n    }\r\n\r\n    reportError(message: string): void {\r\n        if (this.errorCallback && !this.errorCallback(message)) {\r\n            return;\r\n        }\r\n\r\n        (this.errorBuffer || this.errorAccumulator).report(this.path, message);\r\n    }\r\n\r\n    property(propertyName: string, errorCallback?: (errorMessage: string) => boolean): ValidationContext {\r\n        return this.nest(propertyName, errorCallback);\r\n    }\r\n\r\n    index(index: number, errorCallback?: (errorMessage: string) => boolean): ValidationContext {\r\n        return this.nest(`[${index}]`, errorCallback);\r\n    }\r\n\r\n    private nest(path: string, errorCallback: (errorMessage: string) => boolean): ValidationContext {\r\n        if (!path) {\r\n            throw new Error(\"path is undefined\");\r\n        }\r\n\r\n        let fullPath = path;\r\n        if (this.path) {\r\n            fullPath = path[0] === \"[\" ? this.path + path : this.path + \".\" + path;\r\n        }\r\n\r\n        const result = new ValidationContext(\r\n            fullPath,\r\n            this.errorBuffer || this.errorAccumulator,\r\n            errorCallback\r\n        );\r\n\r\n        return result;\r\n    }\r\n\r\n    bufferErrors() {\r\n        const result = new ValidationContext(this.path, this.errorAccumulator, this.errorCallback);\r\n        result.errorBuffer = new ErrorAccumulator();\r\n\r\n        return result;\r\n    }\r\n\r\n    flushErrors() {\r\n        if (this.errorBuffer) {\r\n            const errors = this.errorBuffer.errors();\r\n            Object.keys(errors)\r\n                .forEach(path => {\r\n                    const messages = errors[path];\r\n                    messages.forEach(message => this.errorAccumulator.report(path, message));\r\n                });\r\n        }\r\n\r\n        this.errorBuffer = null;\r\n    }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./server/validator/validation-context.ts\n **/","export * from \"./primitive-type-rules\";\r\nexport * from \"./object-rules\";\r\nexport * from \"./hash-rules\";\r\nexport * from \"./array-rules\";\r\nexport * from \"./rules-base\";\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./server/validator/rules/index.ts\n **/","import { RuleOptions } from \"../definitions\";\r\nimport { SequentialRuleSet, ensureRuleOptions } from \"./rules-base\";\r\n\r\nexport class StringRules extends SequentialRuleSet<string> {\r\n\r\n    protected clone(): this {\r\n        return <this>new StringRules();\r\n    }\r\n\r\n    /** \r\n     * Checks if value has string type. Undefined value is passed as correct. \r\n     * This rule is applied automatically, don't add call this method manually.\r\n     */\r\n    isString(options?: RuleOptions): this {\r\n        options = ensureRuleOptions(options, {\r\n            errorMessage: \"Value must be a string.\",\r\n            stopOnFailure: true\r\n        });\r\n\r\n        return this.checkAndConvert(\r\n            (done, value) => {\r\n                if (value && typeof value !== \"string\") {\r\n                    done(options.errorMessage);\r\n                }\r\n                else {\r\n                    done();\r\n                }\r\n            },\r\n            null,\r\n            true,\r\n            options.stopOnFailure);\r\n    }\r\n\r\n    parseString(options?: RuleOptions): this {\r\n        options = ensureRuleOptions(options, {\r\n            errorMessage: \"Value must be a string.\",\r\n            stopOnFailure: true\r\n        })\r\n\r\n        return this.parse(\r\n            v => {\r\n                if (!v) {\r\n                    return \"\";\r\n                }\r\n\r\n                return \"\" + v;\r\n            },\r\n            options);\r\n    }\r\n\r\n    notEmpty(options?: RuleOptions): this {\r\n\r\n        options = ensureRuleOptions(options, {\r\n            errorMessage: \"Value can not be empty.\",\r\n            stopOnFailure: true\r\n        });\r\n\r\n        return this.checkAndConvert(\r\n            (done, parsedValue) => {\r\n                if (!parsedValue || parsedValue.trim().length === 0) {\r\n                    done(options.errorMessage);\r\n                }\r\n                else {\r\n                    done();\r\n                }\r\n            },\r\n            null,\r\n            false,\r\n            options.stopOnFailure);\r\n    }\r\n\r\n    maxLength(maxLength: number, options?: RuleOptions): this {\r\n        if (maxLength <= 0) {\r\n            throw new Error(\"Max length must be greater than zero.\");\r\n        }\r\n        options = ensureRuleOptions(options, {\r\n            errorMessage: \"Value is too long.\",\r\n            stopOnFailure: false\r\n        });\r\n\r\n        return this.checkAndConvert(\r\n            (done, value) => {\r\n                if (value && value.length > maxLength) {\r\n                    done(options.errorMessage);\r\n                }\r\n                else {\r\n                    done();\r\n                }\r\n            },\r\n            null,\r\n            false,\r\n            options.stopOnFailure);\r\n    }\r\n\r\n    minLength(minLength: number, options?: RuleOptions): this {\r\n        if (minLength <= 0) {\r\n            throw new Error(\"Min length must be greater than zero.\");\r\n        }\r\n\r\n        options = ensureRuleOptions(options, {\r\n            errorMessage: \"Value is too short.\",\r\n            stopOnFailure: false\r\n        });\r\n\r\n        return this.checkAndConvert(\r\n            (done, value) => {\r\n                if (value && value.length < minLength) {\r\n                    done(options.errorMessage);\r\n                }\r\n                else {\r\n                    done();\r\n                }\r\n            },\r\n            null,\r\n            false,\r\n            options.stopOnFailure);\r\n    }\r\n}\r\n\r\nexport class NumberRules extends SequentialRuleSet<number> {\r\n\r\n    protected clone(): NumberRules {\r\n        return new NumberRules();\r\n    }\r\n\r\n    /** \r\n     * Checks if value is number. Null or undefined values are passed as correct. \r\n     * This rule is applied automatically, don't call it. \r\n     */\r\n    isNumber(options?: RuleOptions): this {\r\n        options = ensureRuleOptions(options, {\r\n            errorMessage: \"Value is not valid number.\",\r\n            stopOnFailure: true\r\n        });\r\n\r\n        return this.checkAndConvert(\r\n            (done, value) => {\r\n                if (value === null || value === undefined || <any>value === \"\") {\r\n                    done();\r\n                    return;\r\n                }\r\n\r\n                if (typeof value !== \"number\") {\r\n                    done(options.errorMessage);\r\n                    return;\r\n                }\r\n\r\n                done();\r\n            },\r\n            null,\r\n            true,\r\n            options.stopOnFailure);\r\n    }\r\n\r\n    /**\r\n     * Parses number.\r\n     */\r\n    parseNumber(options?: RuleOptions): this {\r\n        options = ensureRuleOptions(options, {\r\n            errorMessage: \"Value is not valid number.\",\r\n            stopOnFailure: false\r\n        });\r\n\r\n        const failResult = new Object();\r\n\r\n        return this.checkAndConvert(\r\n            (done, convertedValue, obj, root) => {\r\n                if (convertedValue == failResult) {\r\n                    done(options.errorMessage);\r\n                }\r\n                else {\r\n                    done();\r\n                }\r\n            },\r\n            (inputValue, validatingObject, rootObject) => {\r\n                if (inputValue === null || inputValue === undefined || inputValue === \"\") {\r\n                    return inputValue;\r\n                }\r\n\r\n                const converted = parseFloat(inputValue);\r\n                if (converted === null || converted === undefined || isNaN(converted)) {\r\n                    return <number><any>failResult;\r\n                }\r\n\r\n                return converted;\r\n            },\r\n            false,\r\n            options.stopOnFailure);\r\n    }\r\n}\r\n\r\n\r\nexport function str(convert: boolean = true, options?: RuleOptions): StringRules {\r\n    options = ensureRuleOptions(options, {\r\n        errorMessage: \"Value is not a string.\",\r\n        stopOnFailure: true\r\n    });\r\n\r\n    if (convert) {\r\n        return new StringRules().parseString(options);\r\n    }\r\n    else {\r\n        return new StringRules().isString(options);\r\n    }\r\n}\r\n\r\nexport function num(convert: boolean = true, options?: RuleOptions): NumberRules {\r\n    options = ensureRuleOptions(options, {\r\n        errorMessage: \"Value is not a valid number.\",\r\n        stopOnFailure: true\r\n    });\r\n\r\n    if (convert) {\r\n        return new NumberRules().parseNumber(options);\r\n    }\r\n    else {\r\n        return new NumberRules().isNumber(options);\r\n    }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./server/validator/rules/primitive-type-rules.ts\n **/","import { ValidationRule, IValidationContext, RuleOptions } from \"../definitions\";\r\n\r\nexport function ensureRuleOptions(options: RuleOptions, defaultRuleOptions: RuleOptions): RuleOptions {\r\n    options = options || defaultRuleOptions;\r\n    if (!options) {\r\n        throw new Error(\"Options is required\");\r\n    }\r\n\r\n    if (defaultRuleOptions.stopOnFailure === null || defaultRuleOptions.stopOnFailure === undefined) {\r\n        defaultRuleOptions.stopOnFailure = false;\r\n    }\r\n\r\n    if (options.stopOnFailure === null || options.stopOnFailure === undefined) {\r\n        options.stopOnFailure = defaultRuleOptions.stopOnFailure;\r\n    }\r\n\r\n    const result: RuleOptions = {\r\n        errorMessage: options.errorMessage || defaultRuleOptions.errorMessage,\r\n        stopOnFailure: options.stopOnFailure\r\n    };\r\n\r\n    if (!result.errorMessage) {\r\n        throw new Error(\"Error message is required.\");\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/** \r\n * Combines rules array into single rule which runs all rules.\r\n * Parsing stage is run for all rules one by one using previous rule result as input for next rule.\r\n * Validation stage is run for all rules sequentially but stops if rule with stopOnFailure = true is failed.  \r\n */\r\nexport function combineRules<T>(...rules: ValidationRule<T>[]): ValidationRule<T> {\r\n    rules = rules || [];\r\n\r\n    return {\r\n        stopOnFailure: false,\r\n        /** Runs parsing on all rules. */\r\n        runParse(inputValue: any, validatingObject?: any, rootObject?: any): T {\r\n            return rules.reduce((currentValue, rule) => rule.runParse(currentValue, validatingObject, rootObject), inputValue);\r\n        },\r\n        /** Runs all chained rules. */\r\n        runValidate(context: IValidationContext,\r\n            doneCallback: (success: boolean) => void,\r\n            parsedValue: any,\r\n            validatingObject?: any,\r\n            rootObject?: any): void {\r\n            if (!context) {\r\n                throw new Error(\"context is required.\");\r\n            }\r\n            if (!doneCallback) {\r\n                throw new Error(\"done callback is required.\");\r\n            }\r\n\r\n            let allRulesValid = true;\r\n            const rulesToRun = [...rules];\r\n\r\n            const runRule = () => {\r\n                const rule = rulesToRun.shift();\r\n                if (rule) {\r\n                    rule.runValidate(\r\n                        context,\r\n                        (success) => {\r\n                            if (!success && rule.stopOnFailure) {\r\n                                doneCallback(false);\r\n                                return;\r\n                            }\r\n\r\n                            allRulesValid = allRulesValid && success;\r\n\r\n                            // Runs next rule recursively\r\n                            runRule();\r\n                        },\r\n                        parsedValue,\r\n                        validatingObject,\r\n                        rootObject);\r\n                }\r\n                else {\r\n                    doneCallback(allRulesValid);\r\n                }\r\n            };\r\n\r\n            runRule();\r\n        }\r\n    };\r\n}\r\n\r\n/**\r\n * Base class which can contain a set of rules which runs sequentially, \r\n * accumulates errors. \r\n * Each next rule validates conversion result of previous rule if successful or last successful value or input. \r\n */\r\nexport abstract class SequentialRuleSet<T> implements ValidationRule<T> {\r\n    private rules: ValidationRule<T>[] = [];\r\n\r\n    stopOnFailure = false;\r\n\r\n    /** Runs parsing on all rules. */\r\n    runParse(inputValue: any, validatingObject?: any, rootObject?: any): T {\r\n        return combineRules(...this.rules).runParse(inputValue, validatingObject, rootObject);\r\n    }\r\n\r\n    /** Runs all chained rules. */\r\n    runValidate(\r\n        context: IValidationContext,\r\n        doneCallback: (success: boolean) => void,\r\n        parsedValue: any,\r\n        validatingObject?: any,\r\n        rootObject?: any): void {\r\n\r\n        if (!context) {\r\n            throw new Error(\"context is required.\");\r\n        }\r\n        if (!doneCallback) {\r\n            throw new Error(\"done callback is required.\");\r\n        }\r\n\r\n        combineRules(...this.rules).runValidate(\r\n            context,\r\n            doneCallback,\r\n            parsedValue,\r\n            validatingObject,\r\n            rootObject\r\n        );\r\n    }\r\n\r\n    /** \r\n     * Adds a rule which uses custom functions for validation and converting. \r\n     * If parsing function is not provided value is passed to validation function without conversion. \r\n     */\r\n    checkAndConvert(\r\n        validationFn: (doneCallback: (errorMessage?: string) => void, parsedValue: T, validatingObject?: any, rootObject?: any) => void,\r\n        parseFn?: (inputValue: any, validatingObject?: any, rootObject?: any) => T,\r\n        putRuleFirst: boolean = false,\r\n        stopOnFailure = false) {\r\n\r\n        if (!validationFn) {\r\n            throw new Error(\"Validation function is required.\");\r\n        }\r\n\r\n        parseFn = (parseFn || (input => input));\r\n\r\n        return this.withRule(\r\n            {\r\n                stopOnFailure: stopOnFailure,\r\n\r\n                runParse: parseFn,\r\n\r\n                runValidate(\r\n                    context: IValidationContext,\r\n                    done: (success: boolean) => void,\r\n                    inputValue: any,\r\n                    validatingObject?: any,\r\n                    rootObject?: any): void {\r\n\r\n                    validationFn(\r\n                        (errorMessage) => {\r\n                            if (errorMessage) {\r\n                                context.reportError(errorMessage);\r\n                                done(false);\r\n                            }\r\n                            else {\r\n                                done(true);\r\n                            }\r\n                        },\r\n                        inputValue,\r\n                        validatingObject,\r\n                        rootObject);\r\n                }\r\n            },\r\n            putRuleFirst);\r\n    }\r\n\r\n    /** Fails if input value is null or undefined. */\r\n    required(options?: RuleOptions): this {\r\n        options = ensureRuleOptions(options, { errorMessage: \"Value is required.\", stopOnFailure: true });\r\n\r\n        return this.checkAndConvert(\r\n            (done, input) => {\r\n                if (input === null || input === undefined) {\r\n                    done(options.errorMessage);\r\n                }\r\n                else {\r\n                    done();\r\n                }\r\n            },\r\n            null,\r\n            true,\r\n            options.stopOnFailure);\r\n    }\r\n\r\n    /** \r\n     * Parses input value.\r\n     * Parse rules runs first.\r\n     * If transformation function returns null or undefined or throws an error fails with specified error message.\r\n     */\r\n    parse(convertFn: (inputValue: any, validatingObject?: any, rootObject?: any) => T, options?: RuleOptions): this {\r\n        if (!convertFn) {\r\n            throw new Error(\"Transformation function is required.\")\r\n        }\r\n\r\n        options = ensureRuleOptions(options, {\r\n            errorMessage: \"Conversion failed.\",\r\n            stopOnFailure: true\r\n        })\r\n\r\n        const failResult = new Object();\r\n\r\n        return this.checkAndConvert(\r\n            (done, convertedValue, obj, root) => {\r\n                if (convertedValue == failResult) {\r\n                    done(options.errorMessage);\r\n                }\r\n                else {\r\n                    done();\r\n                }\r\n            },\r\n            (inputValue, validatingObject, rootObject) => {\r\n                try {\r\n                    const converted = convertFn(inputValue, validatingObject, rootObject);\r\n                    if (converted === null || converted === undefined) {\r\n                        return <T><any>failResult;\r\n                    }\r\n\r\n                    return converted;\r\n                }\r\n                catch (e) {\r\n                    return <T><any>failResult;\r\n                }\r\n            },\r\n            false,\r\n            options.stopOnFailure);\r\n    }\r\n\r\n    must(predicate: (value: T, validatingObject?: any, rootObject?: any) => boolean, options?: RuleOptions): this {\r\n        if (!predicate) {\r\n            throw new Error(\"Predicate is required.\");\r\n        }\r\n\r\n        options = ensureRuleOptions(options, {\r\n            errorMessage: \"Value is not valid.\",\r\n            stopOnFailure: false\r\n        });\r\n\r\n        return this.checkAndConvert(\r\n            (done, input, obj, root) => {\r\n                if (!predicate(input, obj, root)) {\r\n                    done(options.errorMessage);\r\n                }\r\n                else {\r\n                    done();\r\n                }\r\n            },\r\n            null,\r\n            false,\r\n            options.stopOnFailure);\r\n    }\r\n\r\n    protected withRule(rule: ValidationRule<T>, putRuleFirst: boolean = false): this {\r\n        if (!rule) {\r\n            throw new Error(\"rule is required\");\r\n        }\r\n\r\n        const copy = this.clone();\r\n\r\n        copy.stopOnFailure = this.stopOnFailure;\r\n\r\n        if (putRuleFirst) {\r\n            copy.rules = [rule, ...this.rules];\r\n        }\r\n        else {\r\n            copy.rules = [...this.rules, rule];\r\n        }\r\n\r\n        return <this>copy;\r\n    }\r\n\r\n    protected abstract clone(): SequentialRuleSet<T>;\r\n}\r\n\r\n/** \r\n * Encapsulates rule enclosed in set of rules run before and after the rule.\r\n * \r\n * Parsing only run for main rule. All other rules uses main rule parsing result as input.\r\n * \r\n * The main rule is run only if all rules run before has been run successfuly.\r\n * The rules to run after would be only run if main rule run successfuly.\r\n * \r\n * Enclosing rule would be run successfuly only if all rules (before, main and after) has run successfuly.  \r\n */\r\nexport abstract class EnclosingValidationRuleBase<T> implements ValidationRule<T> {\r\n    private rulesBefore: ValidationRule<T>[] = [];\r\n    private rulesAfter: ValidationRule<T>[] = [];\r\n\r\n    stopOnFailure = false;\r\n\r\n    constructor(protected rule: ValidationRule<T>) {\r\n        if (!rule) {\r\n            throw new Error(\"Validation rule is required.\");\r\n        }\r\n    }\r\n\r\n    runParse(inputValue: any, validatingObject?: any, rootObject?: any): T {\r\n        return combineRules(this.rule).runParse(inputValue, validatingObject, rootObject);\r\n    }\r\n\r\n    runValidate(\r\n        context: IValidationContext,\r\n        doneCallback: (success: boolean) => void,\r\n        obj: any,\r\n        validatingObject?: any,\r\n        rootObject?: any): void {\r\n\r\n        const all = [\r\n            ...(this.rulesBefore || []),\r\n            this.rule,\r\n            ...(this.rulesAfter || [])\r\n        ];\r\n\r\n        combineRules(...all).runValidate(\r\n            context,\r\n            doneCallback,\r\n            obj,\r\n            validatingObject,\r\n            rootObject);\r\n\r\n    }\r\n\r\n    stopOnFail(stopOnFailure: boolean = true): this {\r\n        const copy = this.clone();\r\n\r\n        copy.stopOnFailure = stopOnFailure;\r\n\r\n        return <this>copy;\r\n    }\r\n\r\n    /** Disables null object. */\r\n    required(options?: RuleOptions): this {\r\n\r\n        options = ensureRuleOptions(options, {\r\n            errorMessage: \"Object is required.\",\r\n            stopOnFailure: true\r\n        });\r\n\r\n        const result = this.copy();\r\n\r\n        result.rulesBefore = [any<T>(v => v !== null && v !== undefined, options), ...result.rulesBefore];\r\n\r\n        return result;\r\n    }\r\n\r\n    /** Adds a rule which is run before validation. */\r\n    runBefore(rule: ValidationRule<T>): this {\r\n        if (!rule) {\r\n            throw new Error(\"rule is required\");\r\n        }\r\n\r\n        const result = this.copy();\r\n        result.rulesBefore = [...this.rulesBefore, rule];\r\n\r\n        return result;\r\n    }\r\n\r\n    /** Adds a rule which is run after validation. */\r\n    runAfter(rule: ValidationRule<T>): this {\r\n        if (!rule) {\r\n            throw new Error(\"rule is required\");\r\n        }\r\n\r\n        const result = this.copy();\r\n        result.rulesAfter = [...this.rulesAfter, rule];\r\n\r\n        return result;\r\n    }\r\n\r\n\r\n    before(predicate: (obj: T, validatingObject?: any, rootObject?: any) => boolean, options?: RuleOptions): this {\r\n        if (!predicate) {\r\n            throw new Error(\"Predicate is required.\");\r\n        }\r\n\r\n        return this.runBefore(any<T>(predicate, options));\r\n    }\r\n\r\n    after(predicate: (obj: T, validatingObject?: any, rootObject?: any) => boolean, options?: RuleOptions): this {\r\n        if (!predicate) {\r\n            throw new Error(\"Predicate is required.\");\r\n        }\r\n\r\n        return this.runAfter(any<T>(predicate, options));\r\n    }\r\n\r\n    protected withMainRule(rule: ValidationRule<T>): this {\r\n        if (!rule) {\r\n            throw new Error(\"Rule is required.\");\r\n        }\r\n\r\n        const result = this.copy();\r\n        result.rule = rule;\r\n\r\n        return result;\r\n    }\r\n\r\n    protected abstract clone(): this;\r\n\r\n    private copy(): this {\r\n        const result = this.clone();\r\n\r\n        result.rulesBefore = [...this.rulesBefore];\r\n        result.rulesAfter = [...this.rulesAfter];\r\n        result.stopOnFailure = this.stopOnFailure;\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nexport class EmptyRule<T> implements ValidationRule<T> {\r\n\r\n    stopOnFailure = false;\r\n\r\n    runParse(inputValue: any, validatingObject?: any, rootObject?: any): T {\r\n        return <T>inputValue;\r\n    }\r\n\r\n    /** Runs all chained rules. */\r\n    runValidate(context: IValidationContext,\r\n        doneCallback: (success: boolean) => void,\r\n        parsedValue: any,\r\n        validatingObject?: any,\r\n        rootObject?: any): void {\r\n        doneCallback(true);\r\n    }\r\n}\r\n\r\nexport class AnyRules<T> extends SequentialRuleSet<T> {\r\n    constructor(stopOnFailure: boolean) {\r\n        super();\r\n        this.stopOnFailure = stopOnFailure;\r\n    }\r\n\r\n    protected clone(): AnyRules<T> {\r\n        return new AnyRules<T>(this.stopOnFailure);\r\n    }\r\n}\r\n\r\n/** Validates any value using given predicate. */\r\nexport function any<T>(predicate?: (value: T, entity?: any, rootEntity?: any) => boolean, options?: RuleOptions): AnyRules<T> {\r\n    options = ensureRuleOptions(options, {\r\n        stopOnFailure: false\r\n    });\r\n\r\n    predicate = predicate || (v => true);\r\n    return new AnyRules<T>(options.stopOnFailure).must(predicate, options);\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./server/validator/rules/rules-base.ts\n **/","import { ValidationRule, IValidationContext } from \"../definitions\";\r\nimport { EnclosingValidationRuleBase  } from \"./rules-base\";\r\n\r\nexport interface IPropertyValidationHash {\r\n    [property: string]: ValidationRule<any>;\r\n}\r\n\r\nexport interface IObject {\r\n    [property: string]: any;\r\n}\r\n\r\nclass ObjectValidationRuleCore<T extends IObject> implements ValidationRule<T> {\r\n\r\n    constructor(\r\n        private properties: IPropertyValidationHash,\r\n        private expandable: boolean,\r\n        public stopOnFailure: boolean) {\r\n\r\n        if (!properties) {\r\n            throw new Error(\"Properties is required.\");\r\n        }\r\n    }\r\n\r\n    runParse(obj: any, validatingObject?: any, rootObject?: any): T {\r\n        if (obj === null || obj === undefined) {\r\n            return obj;\r\n        }\r\n\r\n        const result = <T>{};\r\n\r\n        for (let property in this.properties) {\r\n\r\n            const validator = this.properties[property];\r\n            const sourceValue = obj[property];\r\n\r\n            const parsedValue = validator.runParse(sourceValue, obj, rootObject);\r\n            result[property] = parsedValue;\r\n        }\r\n\r\n        if (this.expandable) {\r\n            for (let property in obj) {\r\n                if (!this.properties[property]) {\r\n                    result[property] = obj[property];\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    runValidate(\r\n        context: IValidationContext,\r\n        doneCallback: (success: boolean) => void,\r\n        obj: any,\r\n        validatingObject?: any,\r\n        rootObject?: any): void {\r\n\r\n        if (obj === null || obj === undefined) {\r\n            doneCallback(true);\r\n            return;\r\n        }\r\n\r\n        const propertyRules: Array<{ property: string; validator: ValidationRule<any>; }> = [];\r\n        for (let property in this.properties) {\r\n            const validator = this.properties[property];\r\n            propertyRules.push({\r\n                property,\r\n                validator\r\n            });\r\n        }\r\n\r\n        let allValid = true;\r\n        const run = () => {\r\n            const rule = propertyRules.shift();\r\n            if (rule) {\r\n                const propertyContext = context.property(rule.property);\r\n                const propertyValue = obj[rule.property];\r\n                rule.validator.runValidate(\r\n                    propertyContext,\r\n                    (success) => {\r\n                        allValid = allValid && success;\r\n\r\n                        run();\r\n                    },\r\n                    propertyValue,\r\n                    obj,\r\n                    rootObject\r\n                );\r\n            }\r\n            else {\r\n                doneCallback(allValid);\r\n            }\r\n        };\r\n\r\n        run();\r\n    }\r\n}\r\n\r\nexport class ObjectValidationRule<T extends IObject> extends EnclosingValidationRuleBase<T> {\r\n\r\n    constructor(\r\n        private properties: IPropertyValidationHash,\r\n        private isExpandable: boolean,\r\n        private stopsOnMainRuleFailure: boolean) {\r\n        super(new ObjectValidationRuleCore<T>(properties, isExpandable, stopsOnMainRuleFailure));\r\n    }\r\n\r\n    protected clone(): this {\r\n        return <this>new ObjectValidationRule<T>(this.properties, this.isExpandable, this.stopsOnMainRuleFailure);\r\n    }\r\n\r\n    expandable(): this {\r\n        this.isExpandable = true;\r\n\r\n        return this.makeCopy();\r\n    }\r\n\r\n    private makeCopy(): this {\r\n        return this.withMainRule(\r\n            new ObjectValidationRule<T>(\r\n                this.properties,\r\n                this.isExpandable,\r\n                this.stopsOnMainRuleFailure));\r\n    }\r\n}\r\n\r\nexport function obj<T>(properties: IPropertyValidationHash, stopOnFailure = true): ObjectValidationRule<T> {\r\n    return new ObjectValidationRule<T>(properties, false, stopOnFailure);\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./server/validator/rules/object-rules.ts\n **/","import { ValidationRule, IValidationContext } from \"../definitions\";\r\nimport { EnclosingValidationRuleBase } from \"./rules-base\";\r\n\r\nexport interface IHash<TElement> {\r\n    [key: string]: TElement;\r\n}\r\n\r\nclass HashValidationRuleCore<TElement> implements ValidationRule<IHash<TElement>> {\r\n\r\n    constructor(\r\n        private elementValidationRule: ValidationRule<TElement>,\r\n        private skipInvalidElements: boolean,\r\n        private filterHashFn: (key: string, value?: TElement, rawValue?: any) => boolean,\r\n        public stopOnFailure) {\r\n\r\n        if (!elementValidationRule) {\r\n            throw new Error(\"Element validation rule required\");\r\n        }\r\n    }\r\n\r\n    runParse(hash: any, validatingObject?: any, rootObject?: any): IHash<TElement> {\r\n        if (hash === null || hash === undefined) {\r\n            return hash;\r\n        }\r\n\r\n        const result: IHash<TElement> = {};\r\n\r\n        for (let key in hash) {\r\n            const inputValue = hash[key];\r\n            const parsedValue = this.elementValidationRule.runParse(inputValue, hash, rootObject);\r\n            if (!this.filterHashFn || this.filterHashFn(key, parsedValue, inputValue)) {\r\n                result[key] = parsedValue;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    runValidate(\r\n        context: IValidationContext,\r\n        doneCallback: (success: boolean) => void,\r\n        hash: any,\r\n        validatingObject?: any,\r\n        rootObject?: any): void {\r\n\r\n        const hashKeys: string[] = [];\r\n        for (let key in hash) {\r\n            hashKeys.push(key);\r\n        }\r\n\r\n        let valid = true;\r\n        const run = () => {\r\n            if (hashKeys.length) {\r\n                const key = hashKeys.shift();\r\n                const inputValue = hash[key];\r\n\r\n                const keyContext = context.property(`${key}`).bufferErrors();\r\n\r\n                this.elementValidationRule.runValidate(\r\n                    keyContext,\r\n                    success => {\r\n                        if (this.skipInvalidElements) {\r\n                            if (!success) {\r\n                                delete hash[key];\r\n                            }\r\n                        }\r\n                        else {\r\n                            valid = valid && success;\r\n                            keyContext.flushErrors();\r\n                        }\r\n\r\n                        run();\r\n                    },\r\n                    inputValue,\r\n                    hash,\r\n                    rootObject);\r\n            }\r\n            else {\r\n                doneCallback(valid);\r\n            }\r\n        };\r\n\r\n        run();\r\n    }\r\n}\r\n\r\nexport class HashValidationRule<TElement> extends EnclosingValidationRuleBase<IHash<TElement>> {\r\n\r\n    constructor(\r\n        private elementValidationRule: ValidationRule<TElement>,\r\n        private skipInvalidElementsProp: boolean,\r\n        private filterHashFn: (key: string, value?: TElement) => boolean,\r\n        private stopOnMainRuleFailure) {\r\n\r\n        super(new HashValidationRuleCore<TElement>(elementValidationRule, skipInvalidElementsProp, filterHashFn, stopOnMainRuleFailure));\r\n    }\r\n\r\n    protected clone(): this {\r\n        return <this>new HashValidationRule<TElement>(\r\n            this.elementValidationRule,\r\n            this.skipInvalidElementsProp,\r\n            this.filterHashFn,\r\n            this.stopOnMainRuleFailure);\r\n    }\r\n\r\n    /**\r\n     * Don't fail on invalid element. Instead don't include invalid elements in result hash.\r\n     * Note new rule never fails instead return empty hash.\r\n     */\r\n    skipInvalidElements(skipInvalidElements = true): this {\r\n        this.skipInvalidElementsProp = skipInvalidElements;\r\n\r\n        return this.makeCopy();\r\n    }\r\n\r\n    /** Filter result hash by applying predicate to each hash item and include only items passed the test. */\r\n    filter(predicate: (key: string, value?: TElement) => boolean): this {\r\n        if (!predicate) {\r\n            throw new Error(\"Predicate is required.\");\r\n        }\r\n\r\n        this.filterHashFn = predicate;\r\n\r\n        return this.makeCopy();\r\n    }\r\n\r\n    private makeCopy(): this {\r\n        return this.withMainRule(\r\n            new HashValidationRule<TElement>(\r\n                this.elementValidationRule,\r\n                this.skipInvalidElementsProp,\r\n                this.filterHashFn,\r\n                this.stopOnMainRuleFailure));\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Validates a map of objects with the same structure.\r\n */\r\nexport function hash<TElement>(elementValidationRule: ValidationRule<TElement>, stopOnFailure = true): HashValidationRule<TElement> {\r\n    if (!elementValidationRule) {\r\n        throw new Error(\"Element validation rule is required.\");\r\n    }\r\n\r\n    return new HashValidationRule<TElement>(elementValidationRule, false, null, stopOnFailure);\r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./server/validator/rules/hash-rules.ts\n **/","import { ValidationRule, IValidationContext } from \"../definitions\";\r\nimport { EnclosingValidationRuleBase } from \"./rules-base\";\r\n\r\n\r\nexport class ArrayValidationRuleCore<TElement> implements ValidationRule<TElement[]> {\r\n\r\n    constructor(\r\n        private elementValidationRule: ValidationRule<TElement>,\r\n        private skipInvalidElements: boolean,\r\n        private filterElementFn: (element: TElement, index?: number) => boolean,\r\n        public stopOnFailure: boolean) {\r\n\r\n        if (!elementValidationRule) {\r\n            throw new Error(\"Element validator is required.\");\r\n        }\r\n    }\r\n\r\n    runParse(array: any[], validatingObject?: any, rootObject?: any): TElement[] {\r\n        if (array === null || array === undefined) {\r\n            return array;\r\n        }\r\n        // We don't filter array elements here because we need to keep source indexes in validation context errors.\r\n        return array.map(e => this.elementValidationRule.runParse(e, array, rootObject));\r\n    }\r\n\r\n    runValidate(\r\n        context: IValidationContext,\r\n        doneCallback: (success: boolean) => void,\r\n        array: any[],\r\n        validatingObject?: any,\r\n        rootObject?: any): void {\r\n\r\n        if (array === null || array === undefined) {\r\n            doneCallback(true);\r\n            return;\r\n        }\r\n\r\n        let srcIndex = 0;\r\n        let srcLength = array.length;\r\n        let index = 0;\r\n\r\n        let valid = true;\r\n\r\n        const run = () => {\r\n            if (srcIndex < srcLength) {\r\n\r\n                const element = array[index];\r\n\r\n                if (this.filterElementFn && !this.filterElementFn(element, srcIndex)) {\r\n                    array.splice(index, 1);\r\n                    srcIndex++;\r\n\r\n                    run();\r\n                }\r\n                else {\r\n                    const elementContext = context.index(srcIndex).bufferErrors();\r\n\r\n                    this.elementValidationRule.runValidate(\r\n                        elementContext,\r\n                        success => {\r\n                            if (this.skipInvalidElements) {\r\n                                if (!success) {\r\n                                    array.splice(index, 1);\r\n                                }\r\n                                else {\r\n                                    index++;\r\n                                }\r\n                            }\r\n                            else {\r\n                                elementContext.flushErrors();\r\n\r\n                                valid = valid && success;\r\n                                index++;\r\n                            }\r\n\r\n                            srcIndex++;\r\n                            run();\r\n                        },\r\n                        element,\r\n                        array,\r\n                        rootObject);\r\n                }\r\n            }\r\n            else {\r\n                doneCallback(valid);\r\n            }\r\n        }\r\n\r\n        run();\r\n    }\r\n}\r\n\r\nexport class ArrayValidationRule<TElement> extends EnclosingValidationRuleBase<TElement[]> {\r\n\r\n    constructor(\r\n        private elementValidationRule: ValidationRule<TElement>,\r\n        private skipInvalidElementsProp: boolean,\r\n        private filterElementFn: (element: TElement, index?: number) => boolean,\r\n        private stopOnMainRuleFailure) {\r\n\r\n        super(new ArrayValidationRuleCore<TElement>(\r\n            elementValidationRule,\r\n            skipInvalidElementsProp,\r\n            filterElementFn,\r\n            stopOnMainRuleFailure));\r\n    }\r\n\r\n    protected clone(): this {\r\n        return <this>new ArrayValidationRule<TElement>(\r\n            this.elementValidationRule,\r\n            this.skipInvalidElementsProp,\r\n            this.filterElementFn,\r\n            this.stopOnMainRuleFailure);\r\n    }\r\n\r\n    /**\r\n     * Don't fail on invalid element. Instead don't include invalid elements in result array.\r\n     * Note new rule never fails instead it returns empty array.\r\n     */\r\n    skipInvalidElements(skipInvalidElements = true): this {\r\n        this.skipInvalidElementsProp = skipInvalidElements;\r\n\r\n        return this.makeCopy();\r\n    }\r\n\r\n    /** Filter result array by applying predicate to each hash item and include only items passed the test. */\r\n    filter(predicate: (element: TElement, index?: number) => boolean): this {\r\n        if (!predicate) {\r\n            throw new Error(\"Predicate is required.\");\r\n        }\r\n\r\n        this.filterElementFn = predicate;\r\n        return this.makeCopy();\r\n    }\r\n\r\n    private makeCopy(): this {\r\n        return this.withMainRule(new ArrayValidationRule<TElement>(\r\n            this.elementValidationRule,\r\n            this.skipInvalidElementsProp,\r\n            this.filterElementFn,\r\n            this.stopOnMainRuleFailure));\r\n    }\r\n}\r\n\r\n/** Validates an array of the elements with the same structure. */\r\nexport function arr<TElement>(elementValidationRule: ValidationRule<TElement>, stopOnFailure = true): ArrayValidationRule<TElement> {\r\n    if (!elementValidationRule) {\r\n        throw new Error(\"Element validation rule is required.\");\r\n    }\r\n\r\n    return new ArrayValidationRule<TElement>(\r\n        elementValidationRule,\r\n        false,\r\n        null,\r\n        stopOnFailure);\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./server/validator/rules/array-rules.ts\n **/","/// <reference path=\"../../typings/index.d.ts\" />\r\n\r\nimport Database from \"../../data-access/db\";\r\n\r\nexport default class MongoProductStorage implements Products.IProductStorage {\r\n    constructor(private db: Database) {\r\n        if (!db)\r\n            throw new Error(\"db is missing\");\r\n    }\r\n\r\n    all(): Promise<Api.Product[]> {\r\n        return this.db\r\n            .collection(Database.Collections.products)\r\n            .then(c => c.find({}, { _id: 0 }))\r\n            .then(c => c.toArray());\r\n    }\r\n\r\n    one(id: string): Promise<Api.Product> {\r\n        if (!id)\r\n            throw new Error(\"id is undefined\");\r\n\r\n        return this.db\r\n            .collection(Database.Collections.products)\r\n            .then(c => c.find({ id: id }, { _id: 0 }))\r\n            .then(c => c.limit(1))\r\n            .then(c => c.next());\r\n    }\r\n\r\n    findByTitle(title: string): Promise<Api.Product> {\r\n        if (!title)\r\n            return Promise.reject(\"Title is empty\");\r\n\r\n        return this.db\r\n            .collection(Database.Collections.products)\r\n            .then(c => c.find({ title }, { _id: 0 }))\r\n            .then(c => c.limit(1))\r\n            .then(c => c.next());\r\n    }\r\n\r\n    save(product: Api.Product): Promise<Api.Product> {\r\n        if (!product)\r\n            throw new Error(\"product is undefined\");\r\n\r\n        return this.db\r\n            .collection(Database.Collections.products)\r\n            .then(c => c.updateOne({\r\n                id: product.id\r\n            },\r\n                {\r\n                    $set: {\r\n                        id: product.id,\r\n                        title: product.title,\r\n                        scrapingUrls: product.scrapingUrls\r\n                    }\r\n                },\r\n                {\r\n                    upsert: true\r\n                }))\r\n            .then(() => product);\r\n    }\r\n\r\n    setScrapingData(productId: string, webShopId: string, values: Api.ScrapedValues, log: Api.ScrapeLog): Promise<Api.Product> {\r\n        if (!productId)\r\n            throw new Error(\"productId is undefined\");\r\n        if (!webShopId)\r\n            throw new Error(\"webShopId is undefined\");\r\n        if (!values)\r\n            throw new Error(\"values is undefined\");\r\n\r\n        return this.db\r\n            .collection(Database.Collections.products)\r\n            .then(c => c.updateOne(\r\n                {\r\n                    id: productId\r\n                },\r\n                {\r\n                    $set: {\r\n                        [`values.${webShopId}`]: values,\r\n                        [`log.${webShopId}`]: log\r\n                    }\r\n                },\r\n                {\r\n                    upsert: true\r\n                }))\r\n            .then(r => this.one(productId));\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./server/services/products/mongo-product-storage.ts\n **/","/// <reference path=\"../../typings/index.d.ts\" />\r\n\r\nimport * as moment from \"moment\";\r\nimport * as uuid from \"node-uuid\";\r\n\r\nimport { eventBus, EventNames } from \"../event-bus\";\r\n\r\nimport ProductValidator from \"./product-validator\";\r\n\r\nexport default class ProductService {\r\n    private validator = new ProductValidator();\r\n\r\n    constructor(private storage: Products.IProductStorage) {\r\n        if (!storage)\r\n            throw new Error(\"storage is undefined\");\r\n    }\r\n\r\n    all(): Promise<Api.Product[]> {\r\n        return this.storage.all();\r\n    }\r\n\r\n    save(product: Api.Product): Promise<Api.Product> {\r\n        if (!product)\r\n            throw new Error(\"product is undefined\");\r\n\r\n        if (!product.id)\r\n            product.id = uuid.v1();\r\n\r\n        return this.validator\r\n            .validate(product)\r\n            .then(product => {\r\n                return this.storage\r\n                    .findByTitle(product.title)\r\n                    .then(found => {\r\n                        if (found && found.id !== product.id) {\r\n                            throw {\r\n                                \"title\": [\"Product with such title already exists\"]\r\n                            };\r\n                        }\r\n                    })\r\n                    .then(() => this.storage.save(product))\r\n                    .then(() => this.one(product.id))\r\n                    .then(product => {\r\n                        eventBus.emit(EventNames.ProductUpdated, product.id);\r\n                        return product;\r\n                    });\r\n            });        \r\n    }\r\n\r\n    one(productId: string): Promise<Api.Product> {\r\n        if (!productId)\r\n            throw new Error(\"productId is undefined\");\r\n\r\n        return this.storage.one(productId);\r\n    }\r\n\r\n    findByTitle(title: string): Promise<Api.Product> {\r\n        return this.storage.findByTitle(title);\r\n    }\r\n\r\n    updateScrapedData(productId: string, webshopId: string, data: Scraping.WebShopScrapingResult): Promise<Api.Product> {\r\n        if (!productId)\r\n            throw new Error(\"productId is undefined\");\r\n        if (!webshopId)\r\n            throw new Error(\"webShopId is undefined\");\r\n        if (!data)\r\n            throw new Error(\"data is undefined\");\r\n        const now = moment.utc().toDate();\r\n\r\n        return this.one(productId)\r\n            .then(product => {\r\n                if (!product.values)\r\n                    product.values = {};\r\n\r\n                const values = product.values[webshopId] ||\r\n                    {\r\n                        title: null,\r\n                        price: null,\r\n                        image: null\r\n                    };\r\n                product.values[webshopId] = values;\r\n\r\n                if (!product.log)\r\n                    product.log = {};\r\n\r\n                const log = product.log[webshopId] ||\r\n                    {\r\n                        url: null,\r\n                        scrapedAt: null,\r\n                        error: data.error,\r\n                        values: {}\r\n                    };\r\n                product.log[webshopId] = log;\r\n\r\n                log.url = product.scrapingUrls[webshopId];\r\n                log.scrapedAt = now;\r\n                log.error = data.error;\r\n\r\n                Object.keys(data.values)\r\n                    .forEach(name => {\r\n                        const value = data.values[name];\r\n\r\n                        if (value.isSuccessful)\r\n                            values[name] = value.value;\r\n\r\n                        log.values[name] = {\r\n                            scrapedAt: now,\r\n                            error: value.error\r\n                        };\r\n                    });\r\n\r\n                return this.storage.setScrapingData(product.id, webshopId, values, log);\r\n            });\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./server/services/products/product-service.ts\n **/","module.exports = require(\"moment\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"moment\"\n ** module id = 21\n ** module chunks = 0 1\n **/","module.exports = require(\"node-uuid\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"node-uuid\"\n ** module id = 22\n ** module chunks = 0 1\n **/","/// <reference path=\"../typings/index.d.ts\"/>\r\n\r\nimport { EventEmitter } from \"events\";\r\n\r\nclass EventNames {\r\n    /**\r\n     * Published when product inserted or updated.\r\n     * Params is product id: string.\r\n     */\r\n    static ProductUpdated = \"product-updated\";\r\n    /**\r\n     * Published when product data is scraped.\r\n     * Param is product id: string.\r\n     */\r\n    static ProductScraped = \"product-scraped\";\r\n}\r\n\r\nconst eventBus = new EventEmitter();\r\n\r\nexport { eventBus, EventNames };\n\n\n/** WEBPACK FOOTER **\n ** ./server/services/event-bus.ts\n **/","module.exports = require(\"events\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"events\"\n ** module id = 24\n ** module chunks = 0 1\n **/","/// <reference path=\"../../typings/index.d.ts\" />\r\n\r\nimport { validateWithPromise as validate, ValidationRule, rules } from \"../../validator\";\r\n\r\nexport default class ProductValidator {\r\n    public validator = rules.obj<Api.Product>({\r\n        id: rules.str().notEmpty({ errorMessage: \"Product ID is required\" }),\r\n        title: rules.str()\r\n            .notEmpty({ errorMessage: \"Product title is required\" })\r\n            .must(t => t.length < 1024, { errorMessage: \"Product title too long\" }),\r\n        scrapingUrls: rules.hash(\r\n            rules.str().must(url => !url || (url.indexOf(\"http://\") === 0 || url.indexOf(\"https://\") === 0), { errorMessage: \"URL must starts from http:// or https:// \" }))\r\n            .before(urls => Object.keys(urls)\r\n                .map(shopId => urls[shopId])\r\n                .filter((url: string) => url && url.trim().length > 0)\r\n                .length > 0,\r\n            { errorMessage: \"At least one scraping URL must be specified.\" })\r\n    });\r\n\r\n\r\n    validate(product: Api.Product): Promise<Api.Product> {\r\n        if (!product)\r\n            throw new Error(\"product is undefined\");\r\n\r\n        return validate(product, this.validator);\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./server/services/products/product-validator.ts\n **/","/// <reference path=\"../../server/typings/index.d.ts\" />\r\n\r\nimport Database from \"../../server/data-access/db\";\r\n\r\nimport MongoProductStorage from \"../../server/services/products/mongo-product-storage\";\r\nimport ProductService from \"../../server/services/products/product-service\";\r\n\r\nimport MongoWebShopStorage from \"../../server/services/web-shop/mongo-web-shop-storage\";\r\nimport WebShopService from \"../../server/services/web-shop/web-shop-service\";\r\n\r\nimport JsdomScraper from \"../../server/scrapers/jsdom-scraper\";\r\n\r\nimport ScrapeService from \"../../server/services/scraping/scrape-service\";\r\n\r\nconst db = new Database();\r\n\r\nconst webShopService = new WebShopService(new MongoWebShopStorage(db));\r\nconst productService = new ProductService(new MongoProductStorage(db));\r\n\r\nconst scrapeService = new ScrapeService(productService, webShopService);\r\n\r\nfunction outputProductScrapeResult(scrapeResult: Scraping.ProductScrapeResult, product: Api.Product, shops: Api.WebShop[]) {\r\n    Object.keys(scrapeResult)\r\n        .forEach(shopId => {\r\n            const shop = shops.filter(s => s.id === shopId)[0];\r\n            const result = scrapeResult[shopId];\r\n\r\n            console.log(`Scrapping of ${product.title} successful for shop ${shop.title}`);\r\n\r\n            const out = {};\r\n            Object.keys(result.values)\r\n                .forEach(k => {\r\n                    const v = result.values[k];\r\n                    if (v.isSuccessful) {\r\n                        out[k] = v.value;\r\n                    } else {\r\n                        out[k] = {\r\n                            error: v.error\r\n                        };\r\n                    }\r\n                });\r\n\r\n            console.dir(out);\r\n        });\r\n\r\n}\r\n\r\nwebShopService.all()\r\n    .then(shops => {\r\n        return productService.all()\r\n            .then(products => {\r\n                const productScrapePromises = products.map(product => {\r\n                    return scrapeService.scrapeProductData(product.id)\r\n                        .then(productScrapeResultHash => outputProductScrapeResult(productScrapeResultHash, product, shops));\r\n                });\r\n\r\n                return Promise.all(productScrapePromises);\r\n            });\r\n    })\r\n    .then(() => {\r\n        console.info(\"Scraping completed successfully\");\r\n        process.exit();\r\n    })\r\n    .catch(err => {\r\n        console.error(\"Scraping failed\");\r\n        console.error(err);\r\n        process.exit();\r\n    });\n\n\n/** WEBPACK FOOTER **\n ** ./server-test/test-parsing/run-page-parsing.ts\n **/","/// <reference path=\"../../typings/index.d.ts\" />\r\n\r\nimport ProductService from \"../products/product-service\";\r\nimport WebShopService from \"../web-shop/web-shop-service\";\r\n\r\nimport JsdomScraper from \"../../scrapers/jsdom-scraper\";\r\n\r\nimport { eventBus, EventNames } from \"../event-bus\";\r\n\r\ninterface WebShopHash {\r\n    [webShopId: string]: Api.WebShop;\r\n}\r\n\r\nexport default class ScrapeService implements Scraping.IScrapeService {\r\n    private scraper = new JsdomScraper();\r\n    private webShops: Promise<WebShopHash>;\r\n\r\n    constructor(private productService: ProductService,\r\n        private webShopService: WebShopService) {\r\n        if (!productService)\r\n            throw new Error(\"productService is undefined\");\r\n        if (!webShopService)\r\n            throw new Error(\"webShopService is undefined\");\r\n\r\n        this.webShops = this.webShopService\r\n            .all()\r\n            .then(shops => shops.toHash(s => s.id));\r\n    }\r\n\r\n    scrapeProductData(productId: string): Promise<Scraping.ProductScrapeResult> {\r\n        if (!productId)\r\n            throw new Error(\"productId is undefined\");\r\n\r\n        return this.webShops.then(shops => {\r\n            return this.productService.one(productId)\r\n                .then(product => Promise.all(this.scrapeProduct(product, shops))\r\n                    .then(results => results.toHash(e => e.webShopId, e => e.scrapingResult)))\r\n                .then(r => {\r\n                    eventBus.emit(EventNames.ProductScraped, productId);\r\n                    console.log(\"Product scraped emit\")\r\n\r\n                    return r;\r\n                });\r\n        });\r\n    }\r\n\r\n    private scrapeProduct(product: Api.Product, shops: WebShopHash): Promise<{ webShopId: string; scrapingResult: Scraping.WebShopScrapingResult; }>[] {\r\n\r\n        return Object.keys(product.scrapingUrls)\r\n            .map(webShopId => this.scrapeProductFromShopAndSave(product, webShopId, shops)\r\n                .then(productScrapeResult => ({\r\n                    webShopId: webShopId,\r\n                    scrapingResult: productScrapeResult\r\n                })));\r\n    }\r\n\r\n    private scrapeProductFromShopAndSave(product: Api.Product, webShopId: string, shops: WebShopHash): Promise<Scraping.WebShopScrapingResult> {\r\n        return this.scraper\r\n            .scrape(product.scrapingUrls[webShopId], shops[webShopId].scrapingSettings)\r\n            .then(result => this.productService\r\n                .updateScrapedData(product.id, webShopId, result)\r\n                .then(() => result));\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./server/services/scraping/scrape-service.ts\n **/","/// <reference path=\"../typings/index.d.ts\" />\r\n\r\nimport * as jsdom from \"jsdom\";\r\nimport ValueParserHash from \"./value-parser\";\r\n\r\nexport default class JsdomScraper implements Scraping.IScraper {\r\n    private valueParser = new ValueParserHash();\r\n\r\n    scrape(url: string, values: Api.ScrapingSettings): Promise<Scraping.WebShopScrapingResult> {\r\n        if (!url)\r\n            throw new Error(\"url is undefined\");\r\n        if (!values)\r\n            throw new Error(\"values is undefined.\");\r\n        if (!Object.keys(values).length)\r\n            throw new Error(\"No values to extract\");\r\n\r\n        const result: Scraping.WebShopScrapingResult = {\r\n            isSuccessful: false,\r\n            error: null,\r\n            values: {}\r\n        };\r\n        // \"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36\"\r\n        return new Promise(resolve => {\r\n            jsdom.env({\r\n                url: url,\r\n                userAgent: \"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36\",\r\n                features: {\r\n                    FetchExternalResources: false,\r\n                    ProcessExternalResources: false\r\n                },\r\n                done: (err, window) => {\r\n                    if (err && err.length) {\r\n                        result.isSuccessful = false;\r\n                        result.error = err;\r\n\r\n                        resolve(result);\r\n\r\n                        return;\r\n                    } else {\r\n                        Object.keys(values)\r\n                            .forEach(valueName => {\r\n                                const settings = values[valueName];\r\n                                result.values[valueName] = this.scrapeValue(window.document, settings);\r\n                            });\r\n\r\n                        result.isSuccessful = Object.keys(result.values)\r\n                            .map(valueName => result.values[valueName])\r\n                            .every(v => v.isSuccessful);\r\n\r\n                        resolve(result);\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    private scrapeValue(document: Document, valueScrapingSettings: Api.ValueScrapingSettings[]): Scraping.ValueScrapingResult {\r\n        if (!document)\r\n            throw new Error(\"document is undefined\");\r\n        if (!valueScrapingSettings)\r\n            throw new Error(\"valueScrapingSettings is undefined\");\r\n\r\n        const parsingContext: Scraping.ParserContext = {\r\n            location: document.location\r\n        };\r\n\r\n        const result = this.emptyValueScrapingResult();\r\n\r\n        for (let scrapingSetting of valueScrapingSettings) {\r\n            try {\r\n                const rawValue = this.extractRawValueFromDocument(document, scrapingSetting);\r\n                const parsedValue = this.valueParser[scrapingSetting.type](rawValue, parsingContext);\r\n\r\n                result.isSuccessful = true;\r\n                result.error = null;\r\n                result.settings = scrapingSetting;\r\n                result.value = parsedValue;\r\n\r\n                return result;\r\n            } catch (error) {\r\n                result.isSuccessful = false;\r\n                result.error = error;\r\n                result.settings = scrapingSetting;\r\n\r\n                if (scrapingSetting.failOnError)\r\n                    return result;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    private extractRawValueFromDocument(document: Document, valueScrapingSetting: Api.ValueScrapingSettings): string {\r\n        const extractMethod = valueScrapingSetting.extract || \"queryselector\";\r\n\r\n        switch (extractMethod) {\r\n            case \"queryselector\":\r\n                {\r\n                    const querySelectorSettings = valueScrapingSetting as Api.QuerySelectorExtractSettings;\r\n\r\n                    if (!querySelectorSettings.elementSelector)\r\n                        throw new Error(`elementSelector is missing`);\r\n\r\n                    const elements = document.querySelectorAll(querySelectorSettings.elementSelector);\r\n                    if (elements.length === 0)\r\n                        throw new Error(`Element with selector ${querySelectorSettings.elementSelector} is missing`);\r\n                    if (elements.length > 1)\r\n                        throw new Error(`There are more than one element with selector ${querySelectorSettings.elementSelector}`);\r\n\r\n                    if (querySelectorSettings.attribute)\r\n                        return elements[0].getAttribute(querySelectorSettings.attribute);\r\n                    else\r\n                        return elements[0].textContent;\r\n                };\r\n            case \"regex\":\r\n                {\r\n                    const regexSettings = valueScrapingSetting as Api.RegexExtractSettings;\r\n                    if (!regexSettings.regex)\r\n                        throw new Error(\"regex missing\");\r\n\r\n                    const text = document.querySelector(\"html\").innerHTML;\r\n\r\n                    const regex = new RegExp(regexSettings.regex, \"gmi\");\r\n\r\n                    const matches = regex.exec(text);\r\n                    if (!matches.length)\r\n                        throw new Error(\"No value matches\");\r\n\r\n                    return matches[1];\r\n                };\r\n            default:\r\n                throw new Error(\"Unknown extract method\");\r\n        }\r\n    }\r\n\r\n    private emptyValueScrapingResult(): Scraping.ValueScrapingResult {\r\n        return {\r\n            value: null,\r\n            isSuccessful: true,\r\n            error: null,\r\n            settings: null\r\n        };\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./server/scrapers/jsdom-scraper.ts\n **/","module.exports = require(\"jsdom\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"jsdom\"\n ** module id = 31\n ** module chunks = 1\n **/","/// <reference path=\"../typings/index.d.ts\"/>\r\nimport * as path from \"path\";\r\n\r\nexport default class ValueParserHash {\r\n    parsers = {};\r\n\r\n    constructor() {\r\n        this.parsers[\"string\"] = this.string;\r\n        this.parsers[\"number\"] = this.number;\r\n    }\r\n\r\n    string(input: string): any {\r\n        return (input || \"\").trim();\r\n    }\r\n\r\n    number(input: string): any {\r\n        if (!input)\r\n            throw new Error(\"Number is missing.\");\r\n\r\n        const src = input.replace(/[^0-9\\.]/g, \"\");\r\n\r\n        const number = parseFloat(src);\r\n\r\n        if (number && !isNaN(number))\r\n            return number;\r\n\r\n        throw new Error(\"Number format is not valid.\");\r\n    }\r\n\r\n    relativeUrl(input: string, context: Scraping.ParserContext) {\r\n        const baseLocation = input[0] === \"/\" ? context.location.origin : context.location.href;        \r\n\r\n        return path.posix.join(baseLocation, input).replace(\":/\", \"://\");\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./server/scrapers/value-parser.ts\n **/","module.exports = require(\"path\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"path\"\n ** module id = 33\n ** module chunks = 1\n **/"],"sourceRoot":""}